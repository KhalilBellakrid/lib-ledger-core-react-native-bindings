// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from dynamic.djinni

#import "LGDynamicType.h"
#import <Foundation/Foundation.h>
@class LGDynamicArray;
@class LGDynamicObject;


/**
 *Class representing an object that stores values of different types of objects,
 *those values are appended dynamically in a map like structure with a given key through which they can be retreived
 */
@interface LGDynamicObject : NSObject

/**
 *Store a string with a given key
 *@param key, string, key to access stored value
 *@param value, string
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putString:(nonnull NSString *)key
                                  value:(nonnull NSString *)value;

/**
 *Store a 32 bits integer with a given key
 *@param key, string, key to access stored value
 *@param value, 32 bits integer
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putInt:(nonnull NSString *)key
                               value:(int32_t)value;

/**
 *Store a 64 bits integer with a given key
 *@param key, string, key to access stored value
 *@param value, 64 bits integer
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putLong:(nonnull NSString *)key
                                value:(int64_t)value;

/**
 *Store a double with a given key
 *@param key, string, key to access stored value
 *@param value, double
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putDouble:(nonnull NSString *)key
                                  value:(double)value;

/**
 *Store a binary integer with a given key
 *@param key, string, key to access stored value
 *@param value, binary
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putData:(nonnull NSString *)key
                                value:(nonnull NSData *)value;

/**
 *Store a boolean integer with a given key
 *@param key, string, key to access stored value
 *@param value, bool
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putBoolean:(nonnull NSString *)key
                                   value:(BOOL)value;

/**
 *Store another DynamicObject object with a given key
 *@param key, string, key to access stored value
 *@return DynamicObject object with value stored in it
 */
- (nullable LGDynamicObject *)putObject:(nonnull NSString *)key
                                  value:(nullable LGDynamicObject *)value;

/**
 *Store a DynamicArray object with a given key
 *@param key, string, key to access stored reference
 *@return DynamicArray object with value stored in it
 */
- (nullable LGDynamicObject *)putArray:(nonnull NSString *)key
                                 value:(nullable LGDynamicArray *)value;

/**
 *Get, if exists, stored string having a specific key
 *@param key, string, key of string to look for
 *@return Optional string
 */
- (nullable NSString *)getString:(nonnull NSString *)key;

/**
 *Get, if exists, stored 32 bits integer having a specific key
 *@param key, string, key of 32 bits integer to look for
 *@return Optional 32 bits integer
 */
- (nullable NSNumber *)getInt:(nonnull NSString *)key;

/**
 *Get, if exists, stored 64 bits integer having a specific key
 *@param key, string, key of 64 bits integer to look for
 *@return Optional 64 bits integer
 */
- (nullable NSNumber *)getLong:(nonnull NSString *)key;

/**
 *Get, if exists, stored double having a specific key
 *@param key, string, key of double to look for
 *@return Optional double
 */
- (nullable NSNumber *)getDouble:(nonnull NSString *)key;

/**
 *Get, if exists, stored binary having a specific key
 *@param key, string, key of binary to look for
 *@return Optional binary
 */
- (nullable NSData *)getData:(nonnull NSString *)key;

/**
 *Get, if exists, stored bool having a specific key
 *@param key, string, key of bool to look for
 *@return Optional bool
 */
- (nullable NSNumber *)getBoolean:(nonnull NSString *)key;

/**
 *Get, if exists, stored DynamicObject having a specific key
 *@param key, string, key of DynamicObject to look for
 *@return Optional DynamicObject
 */
- (nullable LGDynamicObject *)getObject:(nonnull NSString *)key;

/**
 *Get, if exists, stored DynamicArray having a specific key
 *@param key, string, key of DynamicArray to look for
 *@return Optional DynamicArray
 */
- (nullable LGDynamicArray *)getArray:(nonnull NSString *)key;

/**
 *Check if a key was used to store a value
 *@param key, string, key to look for
 *@return bool
 */
- (BOOL)contains:(nonnull NSString *)key;

/**
 *Delete key and value stored with it
 *@param key, string, key to look for
 *@return bool, true if key exists and deletion succeeded, false otherwise
 */
- (BOOL)remove:(nonnull NSString *)key;

/**
 *Get list of keys
 *@return list of string, list all stored keys
 */
- (nonnull NSArray<NSString *> *)getKeys;

/**
 *Get type of object stored with specific key
 *@param key, string, key to look for
 *@return Optional DynamicType enum entry
 */
- (nullable NSNumber *)getType:(nonnull NSString *)key;

/**
 *Dump whole object's content as string
 *@return string
 */
- (nonnull NSString *)dump;

/**
 *Serialize whole object to a binary
 *@return binary
 */
- (nonnull NSData *)serialize;

/**
 *Get readonly status of object
 *@param bool
 */
- (BOOL)isReadOnly;

/**
 *Get count of stored references
 *@return 64 bits integer
 */
- (int64_t)size;

/**
 *Create a new instance of DynamicObject class
 *@return DynamicObject instance
 */
+ (nullable LGDynamicObject *)newInstance;

/**
 *Parse a binary to a DynamicObject
 *@param serialized, binary to parse
 *@return Optional DynamicObject
 */
+ (nullable LGDynamicObject *)load:(nonnull NSData *)serialized;

@end
