// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#import "LGDatabaseStatement+Private.h"
#import "LGDatabaseStatement.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "LGDatabaseBlob+Private.h"
#import "LGDatabaseColumn+Private.h"
#import "LGDatabaseResultSet+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class DatabaseStatement::ObjcProxy final
: public ::ledger::core::api::DatabaseStatement
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::DatabaseStatement;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void bindShort(int32_t c_pos, int16_t c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindShort:(::djinni::I32::fromCpp(c_pos))
                                                          value:(::djinni::I16::fromCpp(c_value))];
        }
    }
    void bindInt(int32_t c_pos, int32_t c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindInt:(::djinni::I32::fromCpp(c_pos))
                                                        value:(::djinni::I32::fromCpp(c_value))];
        }
    }
    void bindLong(int32_t c_pos, int64_t c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindLong:(::djinni::I32::fromCpp(c_pos))
                                                         value:(::djinni::I64::fromCpp(c_value))];
        }
    }
    void bindFloat(int32_t c_pos, float c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindFloat:(::djinni::I32::fromCpp(c_pos))
                                                          value:(::djinni::F32::fromCpp(c_value))];
        }
    }
    void bindDouble(int32_t c_pos, double c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindDouble:(::djinni::I32::fromCpp(c_pos))
                                                           value:(::djinni::F64::fromCpp(c_value))];
        }
    }
    void bindString(int32_t c_pos, const std::string & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindString:(::djinni::I32::fromCpp(c_pos))
                                                           value:(::djinni::String::fromCpp(c_value))];
        }
    }
    void bindBlob(int32_t c_pos, const std::shared_ptr<::ledger::core::api::DatabaseBlob> & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindBlob:(::djinni::I32::fromCpp(c_pos))
                                                         value:(::djinni_generated::DatabaseBlob::fromCpp(c_value))];
        }
    }
    void bindNull(int32_t c_pos) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() bindNull:(::djinni::I32::fromCpp(c_pos))];
        }
    }
    std::shared_ptr<::ledger::core::api::DatabaseColumn> describeColumn(int32_t c_colNum) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() describeColumn:(::djinni::I32::fromCpp(c_colNum))];
            return ::djinni_generated::DatabaseColumn::toCpp(objcpp_result_);
        }
    }
    int32_t getColumnCount() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getColumnCount];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
    std::shared_ptr<::ledger::core::api::DatabaseResultSet> execute() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() execute];
            return ::djinni_generated::DatabaseResultSet::toCpp(objcpp_result_);
        }
    }
    void reset() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() reset];
        }
    }
    void close() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() close];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto DatabaseStatement::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto DatabaseStatement::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
