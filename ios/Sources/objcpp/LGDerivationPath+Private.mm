// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#import "LGDerivationPath+Private.h"
#import "LGDerivationPath.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGDerivationPath ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::DerivationPath>&)cppRef;

@end

@implementation LGDerivationPath {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::DerivationPath>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::DerivationPath>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (int32_t)getDepth {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getDepth();
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)getChildNum:(int32_t)index {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getChildNum(::djinni::I32::toCpp(index));
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)getUnhardenedChildNum:(int32_t)index {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getUnhardenedChildNum(::djinni::I32::toCpp(index));
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isHardened:(int32_t)index {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isHardened(::djinni::I32::toCpp(index));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)toString {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->toString();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGDerivationPath *)getParent {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getParent();
        return ::djinni_generated::DerivationPath::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<NSNumber *> *)toArray {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->toArray();
        return ::djinni::List<::djinni::I32>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable LGDerivationPath *)parse:(nonnull NSString *)path {
    try {
        auto objcpp_result_ = ::ledger::core::api::DerivationPath::parse(::djinni::String::toCpp(path));
        return ::djinni_generated::DerivationPath::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto DerivationPath::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto DerivationPath::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGDerivationPath>(cpp);
}

}  // namespace djinni_generated

@end
