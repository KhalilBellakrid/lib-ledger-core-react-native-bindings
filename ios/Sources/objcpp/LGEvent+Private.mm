// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from emitter.djinni

#import "LGEvent+Private.h"
#import "LGEvent.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGDynamicObject+Private.h"
#import "LGEventCode+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGEvent ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::Event>&)cppRef;

@end

@implementation LGEvent {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::Event>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::Event>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (LGEventCode)getCode {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getCode();
        return ::djinni::Enum<::ledger::core::api::EventCode, LGEventCode>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGDynamicObject *)getPayload {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPayload();
        return ::djinni_generated::DynamicObject::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isSticky {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isSticky();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)getStickyTag {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getStickyTag();
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable LGEvent *)newInstance:(LGEventCode)code
                          payload:(nullable LGDynamicObject *)payload {
    try {
        auto objcpp_result_ = ::ledger::core::api::Event::newInstance(::djinni::Enum<::ledger::core::api::EventCode, LGEventCode>::toCpp(code),
                                                                      ::djinni_generated::DynamicObject::toCpp(payload));
        return ::djinni_generated::Event::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto Event::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto Event::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGEvent>(cpp);
}

}  // namespace djinni_generated

@end
