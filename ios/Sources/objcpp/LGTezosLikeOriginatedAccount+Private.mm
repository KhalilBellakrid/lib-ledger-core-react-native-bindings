// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tezos_like_wallet.djinni

#import "LGTezosLikeOriginatedAccount+Private.h"
#import "LGTezosLikeOriginatedAccount.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGAmountCallback+Private.h"
#import "LGAmountListCallback+Private.h"
#import "LGOperationQuery+Private.h"
#import "LGTezosLikeTransactionBuilder+Private.h"
#import "LGTimePeriod+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGTezosLikeOriginatedAccount ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::TezosLikeOriginatedAccount>&)cppRef;

@end

@implementation LGTezosLikeOriginatedAccount {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::TezosLikeOriginatedAccount>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::TezosLikeOriginatedAccount>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nonnull NSString *)getAddress {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getAddress();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable NSString *)getPublicKey {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPublicKey();
        return ::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getBalance:(nullable id<LGAmountCallback>)callback {
    try {
        _cppRefHandle.get()->getBalance(::djinni_generated::AmountCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getBalanceHistory:(nonnull NSDate *)start
                      end:(nonnull NSDate *)end
                   period:(LGTimePeriod)period
                 callback:(nullable id<LGAmountListCallback>)callback {
    try {
        _cppRefHandle.get()->getBalanceHistory(::djinni::Date::toCpp(start),
                                               ::djinni::Date::toCpp(end),
                                               ::djinni::Enum<::ledger::core::api::TimePeriod, LGTimePeriod>::toCpp(period),
                                               ::djinni_generated::AmountListCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isSpendable {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isSpendable();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isDelegatable {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isDelegatable();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGOperationQuery *)queryOperations {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->queryOperations();
        return ::djinni_generated::OperationQuery::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGTezosLikeTransactionBuilder *)buildTransaction {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->buildTransaction();
        return ::djinni_generated::TezosLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TezosLikeOriginatedAccount::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TezosLikeOriginatedAccount::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGTezosLikeOriginatedAccount>(cpp);
}

}  // namespace djinni_generated

@end
