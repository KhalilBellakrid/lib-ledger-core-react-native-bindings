// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#import "RCTCoreBitcoinLikePreparedTransaction.h"
#import "BitcoinLikePreparedTransaction.h"

@implementation RCTCoreBitcoinLikePreparedTransaction

//Export module
RCT_EXPORT_MODULE(RCTCoreBitcoinLikePreparedTransaction)

@synthesize bridge = _bridge;
-(instancetype)init
{
    self = [super init];
    //Init Objc implementation
    if(self)
    {
        self.objcImplementations = [[NSMutableDictionary alloc] init];
    }
    return self;
}

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}
RCT_REMAP_METHOD(init, initWithVersion:(int32_t)version
                                inputs:(NSArray <NSDictionary *> *)inputs
                                 paths:(nonnull NSArray<NSString *> *)paths
                               outputs:(NSArray <NSDictionary *> *)outputs
                              lockTime:(int32_t)lockTime withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
    NSMutableArray *convertedField_1 = [[NSMutableArray alloc] init];
    for (id inputs_elem in inputs)
    {
        RCTCoreBitcoinLikeOutput *rctParam_inputs_elem = (RCTCoreBitcoinLikeOutput *)[self.bridge moduleForName:@"CoreBitcoinLikeOutput"];
        BitcoinLikeOutput *convertedField_1_elem = (BitcoinLikeOutput *)[rctParam_inputs_elem.objcImplementations objectForKey:inputs_elem[@"uid"]];
        [convertedField_1 addObject:convertedField_1_elem];
    }
    NSMutableArray *convertedField_3 = [[NSMutableArray alloc] init];
    for (id outputs_elem in outputs)
    {
        RCTCoreBitcoinLikeOutput *rctParam_outputs_elem = (RCTCoreBitcoinLikeOutput *)[self.bridge moduleForName:@"CoreBitcoinLikeOutput"];
        BitcoinLikeOutput *convertedField_3_elem = (BitcoinLikeOutput *)[rctParam_outputs_elem.objcImplementations objectForKey:outputs_elem[@"uid"]];
        [convertedField_3 addObject:convertedField_3_elem];
    }


    BitcoinLikePreparedTransaction * finalResult = [[BitcoinLikePreparedTransaction alloc] initWithVersion:version inputs:convertedField_1 paths:paths outputs:convertedField_3 lockTime:lockTime];
    NSString *uuid = [[NSUUID UUID] UUIDString];
    RCTCoreBitcoinLikePreparedTransaction *rctImpl = (RCTCoreBitcoinLikePreparedTransaction *)[self.bridge moduleForName:@"CoreBitcoinLikePreparedTransaction"];
    [rctImpl.objcImplementations setObject:finalResult forKey:uuid];
    NSDictionary *result = @{@"type" : @"CoreBitcoinLikePreparedTransaction", @"uid" : uuid };
    if(result)
    {
        resolve(result);
    }
}

@end
