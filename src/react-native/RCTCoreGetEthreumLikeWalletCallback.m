// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ethereum_like_wallet.djinni

#import "RCTCoreGetEthreumLikeWalletCallback.h"


@implementation RCTCoreGetEthreumLikeWalletCallback
//Export module
RCT_EXPORT_MODULE(RCTCoreGetEthreumLikeWalletCallback)

@synthesize bridge = _bridge;

-(instancetype)init
{
    self = [super init];
    //Init Objc implementation
    if(self)
    {
        self.objcImplementations = [[NSMutableDictionary alloc] init];
    }
    return self;
}

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}

RCT_REMAP_METHOD(onSuccess,onSuccess:(NSDictionary *)currentInstance withParams:(NSDictionary *)wallet
                                                                      isCreated:(BOOL)isCreated withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
    if (!currentInstance[@"uid"] || !currentInstance[@"type"])
    {
        reject(@"impl_call_error", @"Error while calling RCTCoreGetEthreumLikeWalletCallback::onSuccess, first argument should be an instance of GetEthreumLikeWalletCallbackImpl", nil);
    }
    GetEthreumLikeWalletCallbackImpl *currentInstanceObj = [self.objcImplementations objectForKey:currentInstance[@"uid"]];
    if (!currentInstanceObj)
    {
        NSString *error = [NSString stringWithFormat:@"Error while calling GetEthreumLikeWalletCallbackImpl::onSuccess, instance of uid %@ not found", currentInstance[@"uid"]];
        reject(@"impl_call_error", error, nil);
    }
    RCTCoreEthereumLikeWallet *rctParam_wallet = (RCTCoreEthereumLikeWallet *)[self.bridge moduleForName:@"CoreEthereumLikeWallet"];
    EthereumLikeWallet *objcParam_0 = (EthereumLikeWallet *)[rctParam_wallet.objcImplementations objectForKey:wallet[@"uid"]];
    [currentInstanceObj onSuccess:objcParam_0 isCreated:isCreated];

}

RCT_REMAP_METHOD(onError,onError:(NSDictionary *)currentInstance withParams:(NSDictionary *)error withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
    if (!currentInstance[@"uid"] || !currentInstance[@"type"])
    {
        reject(@"impl_call_error", @"Error while calling RCTCoreGetEthreumLikeWalletCallback::onError, first argument should be an instance of GetEthreumLikeWalletCallbackImpl", nil);
    }
    GetEthreumLikeWalletCallbackImpl *currentInstanceObj = [self.objcImplementations objectForKey:currentInstance[@"uid"]];
    if (!currentInstanceObj)
    {
        NSString *error = [NSString stringWithFormat:@"Error while calling GetEthreumLikeWalletCallbackImpl::onError, instance of uid %@ not found", currentInstance[@"uid"]];
        reject(@"impl_call_error", error, nil);
    }
    RCTCoreError *rctParam_error = (RCTCoreError *)[self.bridge moduleForName:@"CoreError"];
    Error *objcParam_0 = (Error *)[rctParam_error.objcImplementations objectForKey:error[@"uid"]];
    [currentInstanceObj onError:objcParam_0];

}
RCT_REMAP_METHOD(new, newWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
    GetEthreumLikeWalletCallbackImpl *objcResult = [[GetEthreumLikeWalletCallbackImpl alloc] init];
    NSString *uuid = [[NSUUID UUID] UUIDString];
    [self.objcImplementations setObject:objcResult forKey:uuid];
    NSDictionary *result = @{@"type" : @"CoreGetEthreumLikeWalletCallbackImpl", @"uid" : uuid };
    if (!objcResult || !result)
    {
        reject(@"impl_call_error", @"Error while calling RCTCoreGetEthreumLikeWalletCallbackImpl::init", nil);
    }
    resolve(result);
}
@end
